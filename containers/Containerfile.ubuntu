FROM docker.io/library/ubuntu:jammy AS build

ARG DEBIAN_FRONTEND="noninteractive"

RUN apt-get update --quiet --option Dir::Etc::SourceParts="" && \
    apt-get install --yes --quiet --option Dir::Etc::SourceParts="" \
      bash \
      ca-certificates \
      curl \
      wget \
      make \
      cmake \
      gcc \
      g++ && \
    # Delete package cache to avoid consuming space in layer
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /build

COPY ./src ./src
COPY ./Cargo.toml ./Cargo.toml
COPY ./Cargo.lock ./Cargo.lock

# Install Rust using Rustup
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile=minimal --no-modify-path

# Set the default Rust environment
ENV PATH="${PATH}:/root/.cargo/bin"

RUN cargo build --profile release


FROM docker.io/library/ubuntu:jammy AS final

WORKDIR /vk

COPY ./containers/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Add user `volkanic` so no construct builds run as root
RUN useradd -ms /bin/bash volkanic

# Create needed directories and set permissions
RUN mkdir /server && \
    chown -R volkanic:volkanic /server && \
    chown -R volkanic:volkanic /vk

COPY --from=build /build/target/release/volkanicmc-construct /home/volkanic/.local/bin/volkanicmc-construct

USER volkanic

ENTRYPOINT [ "/entrypoint.sh" ]
